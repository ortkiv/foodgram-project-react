name: foodgram_project_react

on: [push]

jobs:
  tests:
    name: Flake8
    runs-on: ubuntu-latest
  
    steps:
      - name: Clon repo
        uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.9
      - name: Install dependencies
        run: |
          cd backend/foodgramm/
          python -m pip install --upgrade pip
          pip install flake8 pep8-naming flake8-broken-line flake8-return flake8-isort
          pip install -r requirements.txt
      - name: Test with flake8
        run: |
          python -m flake8
          
  build_and_push_to_docker_hub:
    if: github.event_name == 'push' && github.ref == 'refs/heads/master'
    name: Push Docker image to Docker Hub
    runs-on: ubuntu-latest
    needs: [tests]
    
    steps:
      - name: Clon repo
        uses: actions/checkout@v2
      - name: Set up Docker buildx
        uses: docker/setup-buildx-action@v2
      - name: Login Docker
        uses: docker/login-action@v2.1.0
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Push Docker image to Docker hub
        uses: docker/build-push-action@v3
        with:
          context: ./backend/foodgramm/
          push: True
          tags: ortkiv/web:v1
          
  deploy:
    name: Deploy project
    runs-on: ubuntu-latest
    needs: [build_and_push_to_docker_hub]
    
    steps:
      - name: Clon repo
        uses: actions/checkout@v2
      - name: Copy files Via SSH Key
        uses: appleboy/scp-action@master
        with:
          username:         ${{ secrets.USER }}
          host:             ${{ secrets.HOST }}
          passphrase:       ${{ secrets.PASSPHRASE }}
          key:              ${{ secrets.SSH_KEY }}
          source:           "infra/docker-compose.yaml,infra/nginx/"
          target:           "."
          strip_components: 1
      - name: Executing Remote SSH CommandS Using SSH Key
        uses: appleboy/ssh-action@v0.1.5
        with:
          username:   ${{ secrets.USER }}
          host:       ${{ secrets.HOST }}
          passphrase: ${{ secrets.PASSPHRASE }}
          key:        ${{ secrets.SSH_KEY }}
          script:     |
            sudo docker-compose stop
            sudo docker-compose rm -f web
            sudo docker-compose pull web
            rm .env
            touch .env
            echo DB_ENGINE=${{ secrets.DB_ENGINE }} >> .env
            echo DB_NAME=${{ secrets.DB_NAME }} >> .env
            echo POSTGRES_USER=${{ secrets.POSTGRES_USER }} >> .env
            echo POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }} >> .env
            echo DB_HOST=${{ secrets.DB_HOST }} >> .env
            echo DB_PORT=${{ secrets.DB_PORT }} >> .env
            echo DJANGO_SUPERUSER_USERNAME=${{ secrets.DJANGO_SUPERUSER_USERNAME }} >> .env
            echo DJANGO_SUPERUSER_PASSWORD=${{ secrets.DJANGO_SUPERUSER_PASSWORD }} >> .env
            echo DJANGO_SUPERUSER_EMAIL=${{ secrets.DJANGO_SUPERUSER_EMAIL }} >> .env
            sudo docker-compose up -d
        
